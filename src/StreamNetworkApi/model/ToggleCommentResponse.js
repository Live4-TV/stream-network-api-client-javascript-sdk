/**
 * Live4.tv - Stream Targets
 * Omnichannel for live streaming on social networks  We're glad that you chose to use Live4.tv's API for managing your connection with social networks.   Here in this documentation, you will find a step-by-step for integrating our API.  Feel free to contact us in case you need any help.  The login flow:  ![login flow image](https://api-stream-network.live4.tv/mermaid-diagram-login-flow.png \"Login flow image\") 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contato@live4.tv
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StopLiveDetailsResponse from './StopLiveDetailsResponse';

/**
 * The ToggleCommentResponse model module.
 * @module StreamNetworkApi/model/ToggleCommentResponse
 * @version 1.0
 */
class ToggleCommentResponse {
    /**
     * Constructs a new <code>ToggleCommentResponse</code>.
     * @alias module:StreamNetworkApi/model/ToggleCommentResponse
     * @param uuid {String} The unique identifier for the live stream
     * @param accounts {Array.<module:StreamNetworkApi/model/StopLiveDetailsResponse>} An list of responses for each account, with the comment status
     */
    constructor(uuid, accounts) { 
        
        ToggleCommentResponse.initialize(this, uuid, accounts);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, uuid, accounts) { 
        obj['uuid'] = uuid;
        obj['accounts'] = accounts;
    }

    /**
     * Constructs a <code>ToggleCommentResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:StreamNetworkApi/model/ToggleCommentResponse} obj Optional instance to populate.
     * @return {module:StreamNetworkApi/model/ToggleCommentResponse} The populated <code>ToggleCommentResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ToggleCommentResponse();

            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
            if (data.hasOwnProperty('accounts')) {
                obj['accounts'] = ApiClient.convertToType(data['accounts'], [StopLiveDetailsResponse]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ToggleCommentResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ToggleCommentResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ToggleCommentResponse.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['uuid'] && !(typeof data['uuid'] === 'string' || data['uuid'] instanceof String)) {
            throw new Error("Expected the field `uuid` to be a primitive type in the JSON string but got " + data['uuid']);
        }
        if (data['accounts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['accounts'])) {
                throw new Error("Expected the field `accounts` to be an array in the JSON data but got " + data['accounts']);
            }
            // validate the optional field `accounts` (array)
            for (const item of data['accounts']) {
                StopLiveDetailsResponse.validateJSON(item);
            };
        }

        return true;
    }


}

ToggleCommentResponse.RequiredProperties = ["uuid", "accounts"];

/**
 * The unique identifier for the live stream
 * @member {String} uuid
 */
ToggleCommentResponse.prototype['uuid'] = undefined;

/**
 * An list of responses for each account, with the comment status
 * @member {Array.<module:StreamNetworkApi/model/StopLiveDetailsResponse>} accounts
 */
ToggleCommentResponse.prototype['accounts'] = undefined;






export default ToggleCommentResponse;

